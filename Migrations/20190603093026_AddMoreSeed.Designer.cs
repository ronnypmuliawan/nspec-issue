// <auto-generated />
using ASpecInvestigation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASpecInvestigation.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20190603093026_AddMoreSeed")]
    partial class AddMoreSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASpecInvestigation.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            Url = "http://sample.com"
                        },
                        new
                        {
                            BlogId = 2,
                            Url = "http://www.custom-blog.com"
                        });
                });

            modelBuilder.Entity("ASpecInvestigation.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            BlogId = 1,
                            Content = "Test 1",
                            Title = "First post"
                        },
                        new
                        {
                            PostId = 2,
                            BlogId = 1,
                            Content = "Test 2",
                            Title = "Second post"
                        },
                        new
                        {
                            PostId = 3,
                            BlogId = 2,
                            Content = "Custom blog post content",
                            Title = "Custom blog post"
                        });
                });

            modelBuilder.Entity("ASpecInvestigation.Models.Post", b =>
                {
                    b.HasOne("ASpecInvestigation.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
